(()=>{var __webpack_modules__={192:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ../../../../gutenberg/src/blocks/ta-index/required-taxonomies.js\nvar required_taxonomies = __webpack_require__(366);\n;// CONCATENATED MODULE: external "React"\nconst external_React_namespaceObject = React;\nvar external_React_default = /*#__PURE__*/__webpack_require__.n(external_React_namespaceObject);\n;// CONCATENATED MODULE: external "lodash"\nconst external_lodash_namespaceObject = lodash;\n;// CONCATENATED MODULE: ../../../../gutenberg/src/components/TAEtiquetador/helpers.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar _wp$data = wp.data,\n    useSelect = _wp$data.useSelect,\n    useDispatch = _wp$data.useDispatch,\n    registerGenericStore = _wp$data.registerGenericStore;\n/**\r\n*   Utilizes the etiquetador API to return suggested tags for an article.\r\n*   @return\r\n*   @property {string[]} tags                                                   The suggested tags\r\n*   @property {string[]} analizedText                                           The latest analized text\r\n*   @property {function} updateTags                                             Function that recieves text an amount, and sets the result state.\r\n*   @property {bool} fetching                                                   Indicates if the suggested tags are being fetched\r\n*   @property {bool} error                                                      Indicates if an error ocurred while fetching the suggested tags\r\n*/\n\nfunction useEtiquetador(props) {\n  var etiquetadorStates = useSelect(function (select) {\n    return select(\'ta-etiquetador\');\n  });\n  var result = etiquetadorStates.getResult();\n\n  var _useDispatch = useDispatch(\'ta-etiquetador\'),\n      setResult = _useDispatch.setResult;\n\n  var _ref = result ? result : {},\n      _ref$keywords = _ref.keywords,\n      tags = _ref$keywords === void 0 ? [] : _ref$keywords,\n      _ref$text = _ref.text,\n      analizedText = _ref$text === void 0 ? \'\' : _ref$text;\n\n  var _useState = (0,external_React_namespaceObject.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var _useState3 = (0,external_React_namespaceObject.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var updateTags = function updateTags(_ref2) {\n    var text = _ref2.text,\n        amount = _ref2.amount;\n    if (!text) return;\n    setResult(null);\n    setError(false);\n    setFetching(true);\n    var myHeaders = new Headers();\n    myHeaders.append("Content-Type", "application/json");\n    var requestOptions = {\n      method: \'POST\',\n      headers: myHeaders,\n      body: JSON.stringify({\n        query_string: text,\n        keywords_qty: "".concat(amount)\n      }),\n      redirect: \'follow\'\n    };\n    fetch("https://tiempoar-supervised-learning.herokuapp.com/api/textrank", requestOptions).then(function (response) {\n      return response.json();\n    })["catch"](function (error) {\n      console.log(\'ERROR\', error);\n      setError(error);\n      setFetching(false);\n      throw error;\n    }).then(function (finalData) {\n      console.log(\'finalData\', finalData);\n      setResult(finalData);\n      setFetching(false);\n      return finalData;\n    });\n  };\n\n  return {\n    tags: tags,\n    analizedText: analizedText,\n    updateTags: updateTags,\n    fetching: fetching,\n    error: error\n  };\n}\n/**\r\n*   @return {string} The current text content of the current post. The post title is\r\n*   prepended to the main content.\r\n*   It updates with any change in title or content.\r\n*/\n\nvar useArticleText = function useArticleText() {\n  var _useState5 = (0,external_React_namespaceObject.useState)(\'\'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      articleText = _useState6[0],\n      setArticleText = _useState6[1];\n\n  var postContent = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostContent();\n  });\n  var postTitle = useSelect(function (select) {\n    return select(\'core/editor\').getEditedPostAttribute(\'title\');\n  });\n  var richText = wp.richText.create({\n    html: "".concat(postTitle, "\\n        ").concat(postContent)\n  });\n  if (richText.text !== articleText) setArticleText(richText.text);\n  return articleText;\n};\nregisterGenericStore(\'ta-etiquetador\', function () {\n  var storeChanged = function storeChanged() {};\n\n  var result = null;\n  var selectors = {\n    getResult: function getResult() {\n      return result;\n    }\n  };\n  var actions = {\n    setResult: function setResult(newResult) {\n      result = newResult;\n      storeChanged();\n    }\n  };\n  return {\n    getSelectors: function getSelectors() {\n      return selectors;\n    },\n    getActions: function getActions() {\n      return actions;\n    },\n    subscribe: function subscribe(listener) {\n      storeChanged = listener;\n    }\n  };\n}());\n// EXTERNAL MODULE: ../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(191);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../gutenberg/src/components/TAEtiquetador/style.css\nvar style = __webpack_require__(311);\n;// CONCATENATED MODULE: ../../../../gutenberg/src/components/TAEtiquetador/style.css\n\n            \n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.Z, options);\n\n\n\n/* harmony default export */ const TAEtiquetador_style = (style/* default.locals */.Z.locals || {});\n;// CONCATENATED MODULE: ../../../../gutenberg/src/components/TAEtiquetador/TAEtiquetador.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || TAEtiquetador_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return TAEtiquetador_arrayLikeToArray(arr); }\n\nfunction TAEtiquetador_slicedToArray(arr, i) { return TAEtiquetador_arrayWithHoles(arr) || TAEtiquetador_iterableToArrayLimit(arr, i) || TAEtiquetador_unsupportedIterableToArray(arr, i) || TAEtiquetador_nonIterableRest(); }\n\nfunction TAEtiquetador_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction TAEtiquetador_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return TAEtiquetador_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return TAEtiquetador_arrayLikeToArray(o, minLen); }\n\nfunction TAEtiquetador_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction TAEtiquetador_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction TAEtiquetador_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar TAEtiquetador_useSelect = wp.data.useSelect;\nvar addQueryArgs = wp.url.addQueryArgs;\nvar _wp$components = wp.components,\n    Button = _wp$components.Button,\n    Spinner = _wp$components.Spinner;\n/**\r\n * Module constants\r\n */\n\nvar MAX_TERMS_SUGGESTIONS = 20;\nvar DEFAULT_QUERY = {\n  per_page: MAX_TERMS_SUGGESTIONS,\n  orderby: \'count\',\n  order: \'desc\',\n  _fields: \'id,name\'\n}; // Lodash unescape function handles &#39; but not &#039; which may be return in some API requests.\n\nvar unescapeString = function unescapeString(arg) {\n  return (0,external_lodash_namespaceObject.unescape)(arg.replace(\'&#039;\', "\'"));\n};\n/**\r\n * Returns a term object with name unescaped.\r\n * The unescape of the name property is done using lodash unescape function.\r\n *\r\n * @param {Object} term The term object to unescape.\r\n *\r\n * @return {Object} Term object with name property unescaped.\r\n */\n\n\nvar unescapeTerm = function unescapeTerm(term) {\n  return _objectSpread(_objectSpread({}, term), {}, {\n    name: unescapeString(term.name)\n  });\n};\n/**\r\n * Returns an array of term objects with names unescaped.\r\n * The unescape of each term is performed using the unescapeTerm function.\r\n *\r\n * @param {Object[]} terms Array of term objects to unescape.\r\n *\r\n * @return {Object[]} Array of term objects unescaped.\r\n */\n\n\nvar unescapeTerms = function unescapeTerms(terms) {\n  return (0,external_lodash_namespaceObject.map)(terms, unescapeTerm);\n};\n\nvar TAEtiquetador = function TAEtiquetador(props) {\n  var terms = props.terms,\n      taxonomy = props.taxonomy,\n      onUpdateTerms = props.onUpdateTerms; // Etiquetador API\n\n  var _useEtiquetador = useEtiquetador(),\n      etiquetadorTags = _useEtiquetador.tags,\n      analizedText = _useEtiquetador.analizedText,\n      updateTags = _useEtiquetador.updateTags,\n      etiquetadorFetching = _useEtiquetador.fetching,\n      etiquetadorError = _useEtiquetador.error;\n\n  var articleCurrentText = useArticleText();\n\n  var _useState = (0,external_React_namespaceObject.useState)(false),\n      _useState2 = TAEtiquetador_slicedToArray(_useState, 2),\n      fetchingTags = _useState2[0],\n      setFetchingTags = _useState2[1];\n\n  var _useState3 = (0,external_React_namespaceObject.useState)(false),\n      _useState4 = TAEtiquetador_slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = (0,external_React_namespaceObject.useState)([]),\n      _useState6 = TAEtiquetador_slicedToArray(_useState5, 2),\n      selectedTermsNames = _useState6[0],\n      setSelectedTermsNames = _useState6[1];\n\n  var _useState7 = (0,external_React_namespaceObject.useState)([]),\n      _useState8 = TAEtiquetador_slicedToArray(_useState7, 2),\n      requestedTermsNames = _useState8[0],\n      setRequestedTermsNames = _useState8[1];\n\n  var _useState9 = (0,external_React_namespaceObject.useState)([]),\n      _useState10 = TAEtiquetador_slicedToArray(_useState9, 2),\n      tagsOnQueue = _useState10[0],\n      setTagsOnQueue = _useState10[1];\n\n  var tagsFetchTimeout = (0,external_React_namespaceObject.useRef)(null);\n  var fetchWaitTimeout = (0,external_React_namespaceObject.useRef)(null);\n  var textChanged = articleCurrentText != analizedText;\n  var initRequest = (0,external_React_namespaceObject.useRef)(null);\n  var addRequest = (0,external_React_namespaceObject.useRef)(null);\n  var termNames = [];\n  var termsIds = []; // Wait for the user to stop selecting tags\n\n  (0,external_React_namespaceObject.useEffect)(function () {\n    clearTimeout(tagsFetchTimeout.current);\n\n    if (tagsOnQueue.length) {\n      if (!fetchingTags) {\n        tagsFetchTimeout.current = setTimeout(function () {\n          onChange(tagsOnQueue);\n          setTagsOnQueue([]);\n        }, 500);\n      }\n    }\n  }, [tagsOnQueue, fetchingTags]); // Populate termNames and termsIds arrays\n\n  if (terms) {\n    terms.forEach(function (term, i) {\n      termNames.push(term.name);\n      termsIds.push(term.id ? term.id : term.term_id);\n    });\n  }\n  /**\r\n  *   Cheks if the tags exists, and retrieves or creates them, dispatching the result updating the post.\r\n  */\n\n\n  var onChange = function onChange(newTermsNames) {\n    var updatedTermNames = termNames.concat(newTermsNames);\n    var uniqueTermsNames = (0,external_lodash_namespaceObject.uniqBy)(updatedTermNames, function (term) {\n      return term.toLowerCase();\n    });\n    setSelectedTermsNames(uniqueTermsNames); // New terms aren\'t in availableTerms\n\n    var newTermNames = uniqueTermsNames.filter(function (termName) {\n      return !(0,external_lodash_namespaceObject.find)(terms, function (term) {\n        return isSameTermName(term.name, termName);\n      });\n    });\n\n    var termNamesToObjects = function termNamesToObjects(names, availableTerms) {\n      return names.map(function (termName) {\n        return (0,external_lodash_namespaceObject.find)(availableTerms, function (term) {\n          return isSameTermName(term.name, termName);\n        });\n      });\n    };\n\n    if (newTermNames.length === 0) {\n      return onUpdateTerms(termNamesToObjects(uniqueTermsNames, terms), taxonomy.rest_base);\n    }\n\n    setFetchingTags(true);\n    setRequestedTermsNames([].concat(_toConsumableArray(requestedTermsNames), _toConsumableArray(newTermNames)));\n    Promise.all(newTermNames.map(findOrCreateTerm)).then(function (newTerms) {\n      // Old terms + new terms (WP_Terms data)\n      var newAvailableTerms = terms.concat(newTerms); // this.setState( { availableTerms: newAvailableTerms } );\n\n      var requestedTermsNamesCopy = _toConsumableArray(requestedTermsNames);\n\n      newTermNames.forEach(function (termName, i) {\n        (0,external_lodash_namespaceObject.remove)(requestedTermsNamesCopy, function (storedTermName) {\n          return storedTermName == termName;\n        });\n      });\n      setRequestedTermsNames(_toConsumableArray(requestedTermsNamesCopy));\n      return onUpdateTerms(termNamesToObjects(uniqueTermsNames, newAvailableTerms), taxonomy.rest_base).then(function () {\n        setFetchingTags(false);\n      });\n    });\n  };\n  /**\r\n  *   Returns tag data. If it doesn\'t exists, it creates it.\r\n  */\n\n\n  var findOrCreateTerm = function findOrCreateTerm(termName) {\n    var termNameEscaped = (0,external_lodash_namespaceObject.escape)(termName); // Tries to create a term or fetch it if it already exists.\n\n    return wp.apiFetch({\n      path: "/wp/v2/".concat(taxonomy.rest_base),\n      method: \'POST\',\n      data: {\n        name: termNameEscaped\n      }\n    })["catch"](function (error) {\n      var errorCode = error.code;\n\n      if (errorCode === \'term_exists\') {\n        // If the terms exist, fetch it instead of creating a new one.\n        addRequest.current = wp.apiFetch({\n          path: addQueryArgs("/wp/v2/".concat(taxonomy.rest_base), _objectSpread(_objectSpread({}, DEFAULT_QUERY), {}, {\n            search: termNameEscaped\n          }))\n        }).then(unescapeTerms);\n        return addRequest.current.then(function (searchResult) {\n          return (0,external_lodash_namespaceObject.find)(searchResult, function (result) {\n            return isSameTermName(result.name, termName);\n          });\n        });\n      }\n\n      return Promise.reject(error);\n    }).then(function (finalData) {\n      return unescapeTerm(finalData);\n    });\n  };\n\n  var generateTags = function generateTags() {\n    if (!etiquetadorFetching && textChanged) {\n      updateTags({\n        text: articleCurrentText,\n        amount: 20\n      });\n    }\n  };\n\n  var enqueueTag = function enqueueTag(tagName) {\n    return setTagsOnQueue([].concat(_toConsumableArray(tagsOnQueue), [tagName]));\n  };\n\n  var isSameTermName = function isSameTermName(termA, termB) {\n    return unescapeString(termA).toLowerCase() === unescapeString(termB).toLowerCase();\n  };\n\n  var isTermBeingFetched = function isTermBeingFetched(termName) {\n    return (0,external_lodash_namespaceObject.find)(requestedTermsNames, function (term) {\n      return isSameTermName(term, termName);\n    });\n  };\n\n  var isTermInQueue = function isTermInQueue(termName) {\n    return (0,external_lodash_namespaceObject.find)(tagsOnQueue, function (term) {\n      return isSameTermName(term, termName);\n    });\n  };\n\n  var isTagBeingLoaded = function isTagBeingLoaded(tagName) {\n    return isTermInQueue(tagName) || isTermBeingFetched(tagName);\n  };\n\n  var newTagsNames = etiquetadorTags ? etiquetadorTags.filter(function (termName) {\n    return !(0,external_lodash_namespaceObject.find)(terms, function (term) {\n      return isSameTermName(term.name, termName);\n    });\n  }) : null;\n\n  var getTagsButtons = function getTagsButtons() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$onlyDisabled = _ref.onlyDisabled,\n        onlyDisabled = _ref$onlyDisabled === void 0 ? false : _ref$onlyDisabled;\n\n    var tagsButtons = newTagsNames ? newTagsNames.filter(function (tagName) {\n      return !isTagBeingLoaded(tagName);\n    }).map(function (tagName) {\n      return /*#__PURE__*/external_React_default().createElement(Button, {\n        disabled: false,\n        isSecondary: true,\n        className: "tag-btn",\n        key: unescapeString(tagName),\n        onClick: function onClick() {\n          return enqueueTag(tagName);\n        }\n      }, tagName);\n    }) : \'\';\n    return tagsButtons && tagsButtons.length ? /*#__PURE__*/external_React_default().createElement("div", {\n      className: "tags-container"\n    }, tagsButtons) : \'\';\n  };\n\n  var getTagsLoadingButtons = function getTagsLoadingButtons() {\n    var tagsButtons = newTagsNames ? newTagsNames.filter(function (tagName) {\n      return isTagBeingLoaded(tagName);\n    }).map(function (tagName) {\n      return /*#__PURE__*/external_React_default().createElement(Button, {\n        disabled: true,\n        isSecondary: true,\n        className: "tag-btn",\n        key: unescapeString(tagName)\n      }, tagName);\n    }) : \'\';\n    return tagsButtons && tagsButtons.length ? /*#__PURE__*/external_React_default().createElement("div", null, /*#__PURE__*/external_React_default().createElement("p", {\n      className: ""\n    }, "Agregando los siguientes tags:"), /*#__PURE__*/external_React_default().createElement("div", {\n      className: "tags-container tags-fetching"\n    }, tagsButtons)) : \'\';\n  };\n\n  return /*#__PURE__*/external_React_default().createElement("div", {\n    className: "ta-etiquetador"\n  }, /*#__PURE__*/external_React_default().createElement("div", {\n    className: "header"\n  }, /*#__PURE__*/external_React_default().createElement("p", {\n    className: "title"\n  }, "Tags recomendados")), !newTagsNames.length && !etiquetadorFetching && /*#__PURE__*/external_React_default().createElement("div", {\n    className: "no-tags"\n  }, /*#__PURE__*/external_React_default().createElement("p", null, "No hay tags recomendados. Intente modificando el contenido del articulo y volviendo a hacer click en \\"GENERAR TAGS\\"")), getTagsButtons(), getTagsLoadingButtons(), etiquetadorFetching && /*#__PURE__*/external_React_default().createElement("div", {\n    className: "loading-spinner"\n  }, /*#__PURE__*/external_React_default().createElement(Spinner, null)), /*#__PURE__*/external_React_default().createElement(Button, {\n    disabled: !textChanged,\n    className: "generator-btn btn",\n    onClick: generateTags,\n    isSecondary: true\n  }, etiquetadorFetching ? \'GENERANDO\' : \'GENERAR TAGS\'));\n};\n\n/* harmony default export */ const TAEtiquetador_TAEtiquetador = (TAEtiquetador); // const { termsData, setTermsData } = useRbTerms(taxonomy, terms, {\n//     termsQueryArgs: {\n//         include: terms,\n//         only_include: true,\n//         taxonomy: taxonomy,\n//         include: terms.join( \',\' ),\n//         per_page: -1,\n//     },\n//     // fetchArgs: suplementsFetchArgs,\n// });\n// const onChange = ( termNames ) => {\n//     console.log(\'termNames\', termNames);\n// \tconst uniqueTermsNames = uniqBy( termNames, ( term ) => term.toLowerCase() );\n// \t// this.setState( { selectedTerms: uniqueTerms } );\n//\n//     // Stores the terms that are not in the props.terms array\n// \tconst newTermNames = uniqueTermsNames.filter( ( termName ) =>\n// \t\t!find( terms, ( term ) => isSameTermName( term.name, termName ) )\n// \t);\n//\n// \tconst termNamesToObjects = ( names, availableTerms ) => {\n// \t\treturn names.map( ( termName ) =>\n// \t\t\tfind( availableTerms, ( term ) =>\n// \t\t\t\tisSameTermName( term.name, termName )\n// \t\t\t)\n// \t\t);\n// \t};\n//\n// \tif ( newTermNames.length === 0 ) {\n//         console.log(terms);\n// \t\treturn onUpdateTerms(\n// \t\t\ttermNamesToObjects( uniqueTermsNames, terms ),\n// \t\t\ttaxonomy.rest_base\n// \t\t);\n// \t}\n//\n//     console.log(\'newTermNames\', newTermNames);\n// \tPromise.all( newTermNames.map( findOrCreateTerm ) ).then(\n// \t\t( newTerms ) => {\n//             // Old terms + new terms (WP_Terms data)\n// \t\t\tconst newAvailableTerms = terms.concat( newTerms );\n//             console.log(newAvailableTerms, newTerms);\n// \t\t\t// this.setState( { availableTerms: newAvailableTerms } );\n// \t\t\treturn onUpdateTerms(\n// \t\t\t\ttermNamesToObjects( uniqueTermsNames, newAvailableTerms ),\n// \t\t\t\ttaxonomy.rest_base\n// \t\t\t);\n// \t\t}\n// \t);\n// };\n;// CONCATENATED MODULE: external "wp.components"\nconst external_wp_components_namespaceObject = wp.components;\n;// CONCATENATED MODULE: ../../../../gutenberg/src/components/RBTagsManager/RBTagsManager.js\nfunction RBTagsManager_slicedToArray(arr, i) { return RBTagsManager_arrayWithHoles(arr) || RBTagsManager_iterableToArrayLimit(arr, i) || RBTagsManager_unsupportedIterableToArray(arr, i) || RBTagsManager_nonIterableRest(); }\n\nfunction RBTagsManager_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction RBTagsManager_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return RBTagsManager_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return RBTagsManager_arrayLikeToArray(o, minLen); }\n\nfunction RBTagsManager_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction RBTagsManager_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction RBTagsManager_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction RBTagsManager_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction RBTagsManager_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { RBTagsManager_ownKeys(Object(source), true).forEach(function (key) { RBTagsManager_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { RBTagsManager_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction RBTagsManager_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar RBTagsManager_addQueryArgs = wp.url.addQueryArgs;\n/**\r\n * Module constants\r\n */\n\nvar RBTagsManager_MAX_TERMS_SUGGESTIONS = 20;\nvar RBTagsManager_DEFAULT_QUERY = {\n  per_page: RBTagsManager_MAX_TERMS_SUGGESTIONS,\n  orderby: \'count\',\n  order: \'desc\',\n  _fields: \'id,name\'\n}; // Lodash unescape function handles &#39; but not &#039; which may be return in some API requests.\n\nvar RBTagsManager_unescapeString = function unescapeString(arg) {\n  return (0,external_lodash_namespaceObject.unescape)(arg.replace(\'&#039;\', "\'"));\n};\n/**\r\n * Returns a term object with name unescaped.\r\n * The unescape of the name property is done using lodash unescape function.\r\n *\r\n * @param {Object} term The term object to unescape.\r\n *\r\n * @return {Object} Term object with name property unescaped.\r\n */\n\n\nvar RBTagsManager_unescapeTerm = function unescapeTerm(term) {\n  return RBTagsManager_objectSpread(RBTagsManager_objectSpread({}, term), {}, {\n    name: RBTagsManager_unescapeString(term.name)\n  });\n};\n/**\r\n * Returns an array of term objects with names unescaped.\r\n * The unescape of each term is performed using the unescapeTerm function.\r\n *\r\n * @param {Object[]} terms Array of term objects to unescape.\r\n *\r\n * @return {Object[]} Array of term objects unescaped.\r\n */\n\n\nvar RBTagsManager_unescapeTerms = function unescapeTerms(terms) {\n  return (0,external_lodash_namespaceObject.map)(terms, RBTagsManager_unescapeTerm);\n};\n\nvar RBTagsManager = function RBTagsManager(props) {\n  var _props$terms = props.terms,\n      terms = _props$terms === void 0 ? [] : _props$terms,\n      _props$exclude = props.exclude,\n      exclude = _props$exclude === void 0 ? null : _props$exclude,\n      _props$onUpdateTerms = props.onUpdateTerms,\n      onUpdateTerms = _props$onUpdateTerms === void 0 ? null : _props$onUpdateTerms,\n      taxonomy = props.taxonomy;\n\n  var _useState = (0,external_React_namespaceObject.useState)([]),\n      _useState2 = RBTagsManager_slicedToArray(_useState, 2),\n      suggestions = _useState2[0],\n      setSuggestions = _useState2[1];\n\n  var _useState3 = (0,external_React_namespaceObject.useState)(false),\n      _useState4 = RBTagsManager_slicedToArray(_useState3, 2),\n      loadingSuggestions = _useState4[0],\n      setLoadingSuggestions = _useState4[1];\n\n  var lastFetchedValue = (0,external_React_namespaceObject.useRef)(null);\n  var addRequest = (0,external_React_namespaceObject.useRef)(null);\n\n  var getTermValue = function getTermValue(term) {\n    var name = term.name,\n        id = term.id,\n        term_id = term.term_id;\n    return RBTagsManager_objectSpread(RBTagsManager_objectSpread({}, term), {}, {\n      term_id: term_id ? term_id : id,\n      value: name\n    });\n  };\n\n  var getValues = function getValues() {\n    return terms ? terms.map(function (term) {\n      return getTermValue(term).name;\n    }) : [];\n  };\n\n  var onChange = function onChange(termNames) {\n    console.log(\'termNames\', termNames);\n    var uniqueTermsNames = (0,external_lodash_namespaceObject.uniqBy)(termNames, function (term) {\n      return term.toLowerCase();\n    }); // this.setState( { selectedTerms: uniqueTerms } );\n\n    console.log(\'uniqueTermsNames\', uniqueTermsNames); // Stores the terms that are not in the props.terms array\n\n    var newTermNames = uniqueTermsNames.filter(function (termName) {\n      return !(0,external_lodash_namespaceObject.find)(terms, function (term) {\n        return isSameTermName(term.name, termName);\n      });\n    });\n    console.log(\'newTermNames\', newTermNames);\n\n    var termNamesToObjects = function termNamesToObjects(names, availableTerms) {\n      return names.map(function (termName) {\n        return (0,external_lodash_namespaceObject.find)(availableTerms, function (term) {\n          return isSameTermName(term.name, termName);\n        });\n      });\n    };\n\n    if (newTermNames.length === 0) {\n      console.log(terms);\n      return onUpdateTerms(termNamesToObjects(uniqueTermsNames, terms), taxonomy.rest_base);\n    }\n\n    console.log(\'newTermNames\', newTermNames);\n    Promise.all(newTermNames.map(findOrCreateTerm)).then(function (newTerms) {\n      // Old terms + new terms (WP_Terms data)\n      var newAvailableTerms = terms.concat(newTerms);\n      console.log(newAvailableTerms, newTerms); // this.setState( { availableTerms: newAvailableTerms } );\n\n      return onUpdateTerms(termNamesToObjects(uniqueTermsNames, newAvailableTerms), taxonomy.rest_base);\n    });\n  };\n\n  var isInSuggestions = function isInSuggestions(name) {\n    return suggestions ? suggestions.find(function (suggestion) {\n      return name == suggestion.name;\n    }) : false;\n  };\n\n  var loadSuggestions = function loadSuggestions(value) {\n    // Cancel the previous request (falta codigo)\n    // const value = inputValue;\n    setLoadingSuggestions(true);\n    lastFetchedValue.current = value;\n    wp.apiFetch({\n      path: RBTagsManager_addQueryArgs("/wp/v2/".concat(taxonomy.rest_base), RBTagsManager_objectSpread(RBTagsManager_objectSpread({}, RBTagsManager_DEFAULT_QUERY), {}, {\n        search: value\n      }))\n    }).then(function (data) {\n      if (lastFetchedValue.current == value) {\n        var newSuggestions = data.map(function (term) {\n          return term.name;\n        });\n        setLoadingSuggestions(false);\n        setSuggestions(newSuggestions);\n      }\n    });\n  };\n\n  var onSuggestionsFetchRequested = function onSuggestionsFetchRequested(value) {\n    loadSuggestions(value);\n  };\n\n  var isSameTermName = function isSameTermName(termA, termB) {\n    return RBTagsManager_unescapeString(termA).toLowerCase() === RBTagsManager_unescapeString(termB).toLowerCase();\n  };\n\n  var findOrCreateTerm = function findOrCreateTerm(termName) {\n    var termNameEscaped = (0,external_lodash_namespaceObject.escape)(termName); // Tries to create a term or fetch it if it already exists.\n\n    return wp.apiFetch({\n      path: "/wp/v2/".concat(taxonomy.rest_base),\n      method: \'POST\',\n      data: {\n        name: termNameEscaped\n      }\n    })["catch"](function (error) {\n      var errorCode = error.code;\n\n      if (errorCode === \'term_exists\') {\n        console.log(\'term_exists\'); // If the terms exist, fetch it instead of creating a new one.\n\n        addRequest.current = wp.apiFetch({\n          path: RBTagsManager_addQueryArgs("/wp/v2/".concat(taxonomy.rest_base), RBTagsManager_objectSpread(RBTagsManager_objectSpread({}, RBTagsManager_DEFAULT_QUERY), {}, {\n            search: termNameEscaped\n          }))\n        }).then(RBTagsManager_unescapeTerms);\n        return addRequest.current.then(function (searchResult) {\n          return (0,external_lodash_namespaceObject.find)(searchResult, function (result) {\n            return isSameTermName(result.name, termName);\n          });\n        });\n      }\n\n      console.log(\'RETURN REJECT\');\n      return Promise.reject(error);\n    }).then(function (finalData) {\n      console.log(\'finalData\', finalData);\n      return RBTagsManager_unescapeTerm(finalData);\n    });\n  };\n\n  return /*#__PURE__*/external_React_default().createElement(external_wp_components_namespaceObject.FormTokenField, {\n    value: getValues(),\n    suggestions: suggestions,\n    onChange: onChange,\n    onInputChange: onSuggestionsFetchRequested\n  });\n};\n\n/* harmony default export */ const RBTagsManager_RBTagsManager = (RBTagsManager);\n;// CONCATENATED MODULE: ../../../../gutenberg/src/helpers/rb-fetch-hoc/rb-fetch-hoc.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction rb_fetch_hoc_slicedToArray(arr, i) { return rb_fetch_hoc_arrayWithHoles(arr) || rb_fetch_hoc_iterableToArrayLimit(arr, i) || rb_fetch_hoc_unsupportedIterableToArray(arr, i) || rb_fetch_hoc_nonIterableRest(); }\n\nfunction rb_fetch_hoc_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction rb_fetch_hoc_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return rb_fetch_hoc_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return rb_fetch_hoc_arrayLikeToArray(o, minLen); }\n\nfunction rb_fetch_hoc_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction rb_fetch_hoc_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction rb_fetch_hoc_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction rb_fetch_hoc_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rb_fetch_hoc_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rb_fetch_hoc_ownKeys(Object(source), true).forEach(function (key) { rb_fetch_hoc_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rb_fetch_hoc_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rb_fetch_hoc_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _wp$element = wp.element,\n    Component = _wp$element.Component,\n    useState = _wp$element.useState,\n    useEffect = _wp$element.useEffect,\n    useRef = _wp$element.useRef,\n    useReducer = _wp$element.useReducer;\nvar _wp = wp,\n    apiFetch = _wp.apiFetch;\nvar rb_fetch_hoc_addQueryArgs = wp.url.addQueryArgs; //import PropTypes from \'prop-types\';\n\nfunction useRbFetch(path, props) {\n  props = props ? props : {};\n  props = rb_fetch_hoc_objectSpread({\n    queryArgs: null,\n    data: null,\n    method: \'get\',\n    updateOnArgsChange: true,\n    filterData: null,\n    onThen: null,\n    onCatch: null,\n    needsUpdateCheck: null\n  }, props);\n  var isMountFetch = useRef(true);\n\n  var _useReducer = useReducer(function (prevState, action) {\n    /*console.log(\'state change\');*/\n    return rb_fetch_hoc_objectSpread(rb_fetch_hoc_objectSpread({}, prevState), action);\n  }, {\n    response: null,\n    responseData: null,\n    loading: false,\n    error: false,\n    shouldFetch: true\n  }),\n      _useReducer2 = rb_fetch_hoc_slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      setState = _useReducer2[1];\n\n  var prevProps = usePrevious(props);\n  var prevPath = usePrevious(path);\n\n  var triggerFetch = function triggerFetch() {\n    setState({\n      shouldFetch: true\n    });\n  };\n\n  useEffect(function () {\n    // if(!props.updateOnArgsChange || (props.needsUpdateCheck && props.needsUpdateCheck()))\n    //     return;\n    if (!isMountFetch.current && (!props.updateOnArgsChange || prevPath == path && JSON.stringify(prevProps) == JSON.stringify(props))) return;\n    if (!path) return;\n    isMountFetch.current = false; // if(!state.shouldFetch)\n    //     return;\n\n    setState({\n      loading: true,\n      shouldFetch: false\n    });\n    path = props.queryArgs ? rb_fetch_hoc_addQueryArgs(path, props.queryArgs) : path;\n    apiFetch({\n      data: props.data,\n      method: props.method,\n      path: path,\n      parse: false\n    }).then(function (response) {\n      response.json().then(function (responseData) {\n        //console.log(state);\n        setState({\n          response: response,\n          responseData: responseData,\n          loading: false,\n          error: false\n        });\n        if (props.onThen) props.onThen({\n          response: response,\n          responseData: responseData\n        });\n      });\n    })["catch"](function (response) {\n      setState({\n        response: response,\n        loading: false,\n        error: true\n      });\n      if (props.onCatch) props.onCatch({\n        response: response\n      });\n    });\n  });\n  return {\n    response: state.response,\n    responseData: state.responseData,\n    status: {\n      loading: state.loading,\n      error: state.error\n    },\n    triggerFetch: triggerFetch\n  };\n}\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  var ref = useRef(); // Store current value in ref\n\n  useEffect(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\nfunction rbDoFetch(restPath, args) {\n  if (!restPath) return false;\n  var defaultArgs = {\n    parse: false,\n    queryArgs: null,\n    data: null,\n    method: \'get\'\n  };\n  args = args ? Object.assign({}, defaultArgs, args) : defaultArgs;\n  restPath = args.queryArgs ? rb_fetch_hoc_addQueryArgs(restPath, args.queryArgs) : restPath;\n  return apiFetch(rb_fetch_hoc_objectSpread({\n    path: restPath\n  }, args));\n}\n/**\r\n*   @param {string}    fetchDataPropIdentifier\r\n*   Identifier used to distinguish the data send from the HOC to the WrappedComponent, from other HOCs that my used the same default prop name\r\n*/\n\nfunction rb_fetch_hoc_RBFetchHOC(fetchDataPropIdentifier) {\n  var fetchDataPropName = typeof fetchDataPropIdentifier === \'string\' ? fetchDataPropIdentifier : \'fetchData\';\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    return _temp = _class = /*#__PURE__*/function (_Component) {\n      _inherits(RBFetchHOCClass, _Component);\n\n      var _super = _createSuper(RBFetchHOCClass);\n\n      function RBFetchHOCClass(props) {\n        var _this;\n\n        _classCallCheck(this, RBFetchHOCClass);\n\n        _this = _super.call(this, props);\n        _this.initialState = {\n          data: null,\n          fetchOngoing: false,\n          fetchError: false\n        };\n        _this.state = _this.initialState;\n        return _this;\n      }\n\n      _createClass(RBFetchHOCClass, [{\n        key: "componentDidMount",\n        value: function componentDidMount() {\n          if (this.props.fetchOnMount) this.fetchData();\n        }\n      }, {\n        key: "componentDidUpdate",\n        value: function componentDidUpdate(prevProps, prevState) {\n          if (this.props.needsUpdateCheck && this.props.needsUpdateCheck(prevProps, prevState)) {\n            //console.log(\'needsUpdate: true => updating\');\n            this.abortLastRequest();\n            this.fetchData();\n          }\n        }\n      }, {\n        key: "abortLastRequest",\n        value: function abortLastRequest() {\n          this.requests[Object.keys(this.requests).length - 1].aborted = true;\n        }\n      }, {\n        key: "isAborted",\n        value: function isAborted(requestID) {\n          return this.requests[requestID] && this.requests[requestID].aborted;\n        }\n      }, {\n        key: "storeNewRequest",\n        value: function storeNewRequest(request) {\n          this.requests = this.requests ? this.requests : {};\n          var requestID = Object.keys(this.requests).length;\n          this.requests[requestID] = {\n            request: request,\n            aborted: false,\n            id: requestID\n          };\n          return this.requests[requestID];\n        }\n      }, {\n        key: "fetchData",\n        value: function fetchData() {\n          var _this2 = this;\n\n          this.setState({\n            fetchOngoing: true\n          });\n\n          if (!this.props.restPath) {\n            this.setState({\n              fetchOngoing: false\n            });\n            return false;\n          }\n\n          var request = rbDoFetch(this.props.restPath, {\n            queryArgs: this.props.queryArgs,\n            method: this.props.fetchMethod,\n            data: this.props.requestData,\n            parse: this.props.parse\n          });\n          var requestData = this.storeNewRequest(request);\n          request.then(function (response) {\n            if (_this2.props.abortPreviousRequestOnNew && _this2.isAborted(requestData.id)) return false;\n            response.json().then(function (data) {\n              _this2.setState({\n                data: data,\n                fetchOngoing: false,\n                fetchError: false\n              }, function () {\n                if (_this2.props.onFetchSuccess) {\n                  _this2.props.onFetchSuccess(response, data);\n                }\n              });\n            });\n          })["catch"](function (response) {\n            if (_this2.props.abortPreviousRequestOnNew && _this2.isAborted(requestData.id)) return false;\n\n            _this2.setState({\n              fetchOngoing: false,\n              fetchError: {\n                response: response\n              }\n            });\n          });\n        }\n      }, {\n        key: "getPassThoughProps",\n        value: function getPassThoughProps() {\n          var passThroughProps = Object.assign({}, this.props);\n\n          for (var hocPropName in RBFetchHOCClass.defaultProps) {\n            if (passThroughProps.hasOwnProperty(hocPropName)) delete passThroughProps[hocPropName];\n          }\n\n          return passThroughProps;\n        }\n      }, {\n        key: "getFetchData",\n        value: function getFetchData() {\n          var _this3 = this;\n\n          var fetchData = {};\n          fetchData[fetchDataPropName] = {\n            data: this.state.data,\n            fetchStatus: {\n              ongoing: this.state.fetchOngoing,\n              error: this.state.fetchError\n            },\n            doFetch: function doFetch() {\n              return _this3.fetchData();\n            }\n          };\n          if (this.props.fetchDataFilter) fetchData[fetchDataPropName] = this.props.fetchDataFilter(fetchData[fetchDataPropName]);\n          return fetchData;\n        }\n      }, {\n        key: "render",\n        value: function render() {\n          var fetchData = this.getFetchData();\n          var passThroughProps = this.getPassThoughProps();\n          return /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, passThroughProps, fetchData));\n        }\n      }]);\n\n      return RBFetchHOCClass;\n    }(Component), _class.defaultProps = {\n      queryArgs: {},\n      fetchOnMount: true,\n      abortPreviousRequestOnNew: true,\n      parse: false,\n      fetchMethod: \'get\',\n      requestData: null,\n      restPath: \'\',\n      needsUpdateCheck: null,\n      onFetchSuccess: null,\n      //Allows to mutate the sent through the fetchData prop\n      fetchDataFilter: null\n    }, _temp;\n  };\n}\n;// CONCATENATED MODULE: ../../../../gutenberg/src/helpers/rb-terms-fetch-hoc/rb-terms-fetch-hoc.js\nfunction rb_terms_fetch_hoc_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rb_terms_fetch_hoc_typeof = function _typeof(obj) { return typeof obj; }; } else { rb_terms_fetch_hoc_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rb_terms_fetch_hoc_typeof(obj); }\n\nfunction rb_terms_fetch_hoc_extends() { rb_terms_fetch_hoc_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return rb_terms_fetch_hoc_extends.apply(this, arguments); }\n\nfunction rb_terms_fetch_hoc_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rb_terms_fetch_hoc_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rb_terms_fetch_hoc_createClass(Constructor, protoProps, staticProps) { if (protoProps) rb_terms_fetch_hoc_defineProperties(Constructor.prototype, protoProps); if (staticProps) rb_terms_fetch_hoc_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rb_terms_fetch_hoc_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rb_terms_fetch_hoc_setPrototypeOf(subClass, superClass); }\n\nfunction rb_terms_fetch_hoc_setPrototypeOf(o, p) { rb_terms_fetch_hoc_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rb_terms_fetch_hoc_setPrototypeOf(o, p); }\n\nfunction rb_terms_fetch_hoc_createSuper(Derived) { var hasNativeReflectConstruct = rb_terms_fetch_hoc_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rb_terms_fetch_hoc_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rb_terms_fetch_hoc_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rb_terms_fetch_hoc_possibleConstructorReturn(this, result); }; }\n\nfunction rb_terms_fetch_hoc_possibleConstructorReturn(self, call) { if (call && (rb_terms_fetch_hoc_typeof(call) === "object" || typeof call === "function")) { return call; } return rb_terms_fetch_hoc_assertThisInitialized(self); }\n\nfunction rb_terms_fetch_hoc_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rb_terms_fetch_hoc_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rb_terms_fetch_hoc_getPrototypeOf(o) { rb_terms_fetch_hoc_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rb_terms_fetch_hoc_getPrototypeOf(o); }\n\nfunction rb_terms_fetch_hoc_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rb_terms_fetch_hoc_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rb_terms_fetch_hoc_ownKeys(Object(source), true).forEach(function (key) { rb_terms_fetch_hoc_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rb_terms_fetch_hoc_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rb_terms_fetch_hoc_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar rb_terms_fetch_hoc_wp$element = wp.element,\n    rb_terms_fetch_hoc_Component = rb_terms_fetch_hoc_wp$element.Component,\n    rb_terms_fetch_hoc_useState = rb_terms_fetch_hoc_wp$element.useState,\n    rb_terms_fetch_hoc_useEffect = rb_terms_fetch_hoc_wp$element.useEffect;\n\nfunction useTermsFetch() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _args$termsQueryArgs = args.termsQueryArgs,\n      termsQueryArgs = _args$termsQueryArgs === void 0 ? {} : _args$termsQueryArgs,\n      _args$fetchArgs = args.fetchArgs,\n      fetchArgs = _args$fetchArgs === void 0 ? {} : _args$fetchArgs; //Terms query\n\n  var termsQuery = rb_terms_fetch_hoc_objectSpread({}, termsQueryArgs); //Fetch Args\n\n\n  var finalFetchArgs = rb_terms_fetch_hoc_objectSpread({\n    updateOnArgsChange: false\n  }, fetchArgs); //Terms Fetch\n\n\n  var _useRbFetch = useRbFetch(\'/rb/v1/terms\', rb_terms_fetch_hoc_objectSpread(rb_terms_fetch_hoc_objectSpread({}, finalFetchArgs), {}, {\n    queryArgs: termsQuery\n  })),\n      response = _useRbFetch.response,\n      terms = _useRbFetch.responseData,\n      status = _useRbFetch.status;\n\n  var totalPages = response && response.headers ? parseInt(response.headers.get(\'X-WP-TotalPages\')) : 0;\n  return {\n    terms: terms,\n    totalPages: totalPages,\n    status: status,\n    response: response\n  };\n}\nfunction RBTermsFetch() {\n  return function (HocComponent) {\n    var _class, _temp;\n\n    return _temp = _class = /*#__PURE__*/function (_Component) {\n      rb_terms_fetch_hoc_inherits(_class, _Component);\n\n      var _super = rb_terms_fetch_hoc_createSuper(_class);\n\n      function _class(props) {\n        var _this;\n\n        rb_terms_fetch_hoc_classCallCheck(this, _class);\n\n        _this = _super.call(this, props);\n        _this.initialState = {\n          terms: []\n        };\n        _this.state = _this.initialState;\n        _this.RBFetch = RBFetchHOC(\'termsFetchData\')(HocComponent);\n        return _this;\n      }\n\n      rb_terms_fetch_hoc_createClass(_class, [{\n        key: "checkNeedsUpdate",\n        value: function checkNeedsUpdate(prevProps, prevState) {\n          if (this.props.updateTermsOnArgsChange && this.restArgsChanged(prevProps)) {\n            //console.log(\'Terms fetch arguments changed => needsUpdate\');\n            return true;\n          }\n\n          return false;\n        }\n      }, {\n        key: "restArgsChanged",\n        value: function restArgsChanged(prevProps) {\n          var newArgs = this.props.termsFetchArgs;\n          var prevArgs = prevProps.termsFetchArgs;\n          if (newArgs && !prevArgs || !newArgs && prevArgs) return true;\n          if (newArgs == prevArgs) return false;\n\n          for (var argKey in newArgs) {\n            if (newArgs.hasOwnProperty(argKey)) {\n              if (!prevArgs.hasOwnProperty(argKey) || newArgs[argKey] != prevArgs[argKey]) return true;\n            }\n          }\n\n          return false;\n        }\n      }, {\n        key: "onFetchSuccess",\n        value: function onFetchSuccess(response, data) {\n          var _this2 = this;\n\n          //console.log(\'FETCH SUCCESS\');\n          this.setState({\n            totalPages: response.headers ? parseInt(response.headers.get(\'X-WP-TotalPages\')) : 0,\n            terms: data\n          }, function () {\n            if (_this2.props.onFetchSuccess) _this2.props.onFetchSuccess(response, data);\n          });\n        }\n      }, {\n        key: "fetchDataFilter",\n        value: function fetchDataFilter(data) {\n          return rb_terms_fetch_hoc_objectSpread(rb_terms_fetch_hoc_objectSpread({}, data), {}, {\n            terms: this.state.terms,\n            totalPages: this.state.totalPages\n          });\n        }\n      }, {\n        key: "render",\n        value: function render() {\n          var _this3 = this;\n\n          //const {...passThroughProps} = this.props;\n          return /*#__PURE__*/React.createElement(this.RBFetch, rb_terms_fetch_hoc_extends({}, this.props, {\n            queryArgs: this.props.termsFetchArgs,\n            restPath: "/rb/v1/terms",\n            needsUpdateCheck: function needsUpdateCheck(prevProps, prevState) {\n              return _this3.checkNeedsUpdate(prevProps, prevState);\n            },\n            onFetchSuccess: function onFetchSuccess(response, data) {\n              return _this3.onFetchSuccess(response, data);\n            },\n            fetchDataFilter: function fetchDataFilter(data) {\n              return _this3.fetchDataFilter(data);\n            }\n          }));\n        }\n      }]);\n\n      return _class;\n    }(rb_terms_fetch_hoc_Component), _class.defaultProps = {\n      updateTermsOnArgsChange: true,\n      termsFetchArgs: {\n        taxonomy: \'post_tag\'\n      }\n    }, _temp;\n  };\n}\n;// CONCATENATED MODULE: ../../../../gutenberg/src/helpers/rb-terms/rb-terms.js\nfunction rb_terms_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rb_terms_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rb_terms_ownKeys(Object(source), true).forEach(function (key) { rb_terms_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rb_terms_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rb_terms_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction rb_terms_slicedToArray(arr, i) { return rb_terms_arrayWithHoles(arr) || rb_terms_iterableToArrayLimit(arr, i) || rb_terms_unsupportedIterableToArray(arr, i) || rb_terms_nonIterableRest(); }\n\nfunction rb_terms_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction rb_terms_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return rb_terms_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return rb_terms_arrayLikeToArray(o, minLen); }\n\nfunction rb_terms_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction rb_terms_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction rb_terms_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar rb_terms_useState = wp.element.useState;\n\n/**\r\n*   Variables and functionalities that facilitates the managment of terms data\r\n*   @property {WP_Term[]}   termsData                       Terms array\r\n*   @property {function}    setTermsData                    Functions to change the \'termsData\'\r\n*   @property {object}      termsFetchStatus                Current status of the terms fetch\r\n*       @property {bool}    loading\r\n*       @property {bool}    error\r\n*   @property {bool}        termsChanged                    If the terms had changed from the original data\r\n*                                                           provided through the \'initialTerms\' arg\r\n*   @property {object}      taxQuery                        Tax query filter in base of the tax data. To use in WP_Query\r\n*   @property {int}         totalPages                      Amount of pages for the terms query\r\n*/\n\nfunction useRbTerms(taxonomy, termsQueryableData) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _args$termsQueryArgs = args.termsQueryArgs,\n      termsQueryArgs = _args$termsQueryArgs === void 0 ? {} : _args$termsQueryArgs,\n      _args$fetchArgs = args.fetchArgs,\n      fetchArgs = _args$fetchArgs === void 0 ? {} : _args$fetchArgs,\n      _args$field = args.field,\n      field = _args$field === void 0 ? \'term_id\' : _args$field,\n      _args$initialTerms = args.initialTerms,\n      initialTerms = _args$initialTerms === void 0 ? [] : _args$initialTerms;\n\n  var _useState = rb_terms_useState(false),\n      _useState2 = rb_terms_slicedToArray(_useState, 2),\n      termsChanged = _useState2[0],\n      setTermsChanged = _useState2[1];\n\n  var _useState3 = rb_terms_useState(initialTerms),\n      _useState4 = rb_terms_slicedToArray(_useState3, 2),\n      termsStateData = _useState4[0],\n      setTermsDataState = _useState4[1];\n\n  var setTermsData = function setTermsData(stateValue) {\n    setTermsDataState(stateValue);\n    termsChanged ? false : setTermsChanged(true);\n  }; //Terms in\n\n\n  var terms_in = {};\n  if (field == \'term_id\') terms_in.include = termsQueryableData;else terms_in[field] = termsQueryableData; //Terms query\n\n  var termsQuery = rb_terms_objectSpread(rb_terms_objectSpread({}, termsQueryArgs), terms_in); //Terms Fetch\n\n\n  var _useTermsFetch = useTermsFetch({\n    termsQueryArgs: termsQuery,\n    fetchArgs: fetchArgs\n  }),\n      termsFetchData = _useTermsFetch.terms,\n      termsFetchStatus = _useTermsFetch.status,\n      totalPages = _useTermsFetch.totalPages; //Tax query for WP_Query\n\n\n  var taxQuery = {\n    taxonomy: taxonomy,\n    field: field,\n    terms: termsQueryableData\n  }; //Return\n\n  var termsData = termsChanged ? termsStateData : termsFetchData;\n  return {\n    termsData: termsData,\n    termsFetchData: termsFetchData,\n    termsFetchStatus: termsFetchStatus,\n    termsChanged: termsChanged,\n    termsStateData: termsStateData,\n    setTermsData: setTermsData,\n    taxQuery: taxQuery,\n    totalPages: totalPages,\n    terms_in: terms_in\n  };\n}\nfunction taxQueryArgs() {\n  var relation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'OR\';\n  var taxQueries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var finalQuery = {};\n  var count = 0;\n  taxQueries.forEach(function (taxQuery) {\n    if (taxQuery.terms && taxQuery.terms.length) {\n      finalQuery[count] = taxQuery;\n      count++;\n    }\n  });\n  if (count > 1) finalQuery.relation = relation;\n  return finalQuery;\n}\n/**\r\n*   Devuelve una taxonomies query a usar en un WP_Query de articulos, en base a los\r\n*   siguientes parametros\r\n*   @param {array[]} terms                                  Array de terms tipo [ \'tax_id\' => [124,626,34]]\r\n*                                                           Se puede optar por pasar en vez de un array de terms, un array\r\n*                                                           con mas opciones, las cuales se detallan a continuacion.\r\n*           @param {mixed[]} terms                          Terms de la taxonomia. Tienen que corresponder al valor pasado por\r\n*                                                           la opcion \'field\'\r\n*           @param {string} field                           Indica a que field del term se refieren los valores pasados por $terms\r\n*                                                           Por default es \'term_id\'\r\n*           @param {bool} required                          Indica si la query de la taxonomia es obligatoria. Esto mete a esta taxonomia\r\n*                                                           en una query con relacion \'AND\', junto a las demas taxonomias obligatorias.\r\n*   @return {mixed[]}\r\n*/\n\nfunction rbTaxQuery(terms) {\n  var finalQuery = {};\n  var disjunctQuery = {};\n  var requiredQuery = {};\n  var reqCount = 0;\n  var disCount = 0;\n\n  for (var taxName in terms) {\n    if (!terms.hasOwnProperty(taxName)) continue;\n    var taxData = terms[taxName];\n    var taxTerms = Array.isArray(taxData) ? taxData : taxData.terms;\n    if (!taxTerms || Array.isArray(taxTerms) && !taxTerms.length) continue;\n    var taxQuery = {\n      taxonomy: taxName,\n      terms: taxTerms,\n      field: taxData.hasOwnProperty("field") && taxData.field ? taxData.field : \'term_id\'\n    };\n\n    if (taxData.hasOwnProperty("required") && taxData.required) {\n      requiredQuery[reqCount] = taxQuery;\n      reqCount++;\n    } else {\n      disjunctQuery[disCount] = taxQuery;\n      disCount++;\n    }\n  }\n\n  if (requiredQuery[reqCount - 1]) {\n    //If there are required terms\n    finalQuery = requiredQuery;\n    finalQuery.relation = \'AND\';\n  }\n\n  if (disjunctQuery[disCount - 1]) {\n    disjunctQuery.relation = \'OR\';\n    if (finalQuery.relation != \'AND\') //if the query is empty (no required terms)\n      finalQuery = disjunctQuery;else finalQuery[\'disjuntQuery\'] = disjunctQuery;\n  }\n\n  return finalQuery;\n}\n;// CONCATENATED MODULE: ../../../../gutenberg/src/blocks/ta-index/etiquetador.js\nfunction etiquetador_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction etiquetador_extends() { etiquetador_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return etiquetador_extends.apply(this, arguments); }\n\n\n\n\n\n\nvar etiquetador_wp$data = wp.data,\n    withSelect = etiquetador_wp$data.withSelect,\n    withDispatch = etiquetador_wp$data.withDispatch;\nvar compose = wp.compose.compose;\n\nfunction postScreenTermsSelector(OriginalComponent) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var taxonomy = props.slug,\n        taxonomyData = props.taxonomy,\n        terms = props.terms,\n        onUpdateTerms = props.onUpdateTerms;\n    if (taxonomy !== \'ta_article_tag\') return /*#__PURE__*/external_React_default().createElement(OriginalComponent, props);\n    return /*#__PURE__*/external_React_default().createElement((external_React_default()).Fragment, null, /*#__PURE__*/external_React_default().createElement(TATagsManager, etiquetador_extends({}, props, {\n      taxonomy: taxonomyData,\n      slug: taxonomy\n    })));\n  };\n}\n\nwp.hooks.addFilter(\'editor.PostTaxonomyType\', \'ta-etiquetador\', postScreenTermsSelector);\nvar TATagsManager = compose(withSelect(function (select, _ref) {\n  var slug = _ref.slug;\n\n  var _select = select(\'core/editor\'),\n      getCurrentPost = _select.getCurrentPost;\n\n  var _select2 = select(\'core\'),\n      getTaxonomy = _select2.getTaxonomy;\n\n  var taxonomy = getTaxonomy(slug);\n  return {\n    hasCreateAction: taxonomy ? (0,external_lodash_namespaceObject.get)(getCurrentPost(), [\'_links\', \'wp:action-create-\' + taxonomy.rest_base], false) : false,\n    hasAssignAction: taxonomy ? (0,external_lodash_namespaceObject.get)(getCurrentPost(), [\'_links\', \'wp:action-assign-\' + taxonomy.rest_base], false) : false,\n    taxonomy: taxonomy\n  };\n}), withDispatch(function (dispatch) {\n  return {\n    onUpdateTerms: function onUpdateTerms(termsIds, restBase) {\n      console.log(\'TERMS UPDATE\', termsIds);\n      var dispatchPromise = dispatch(\'core/editor\').editPost(etiquetador_defineProperty({}, restBase, termsIds));\n      console.log(dispatchPromise);\n      return dispatchPromise;\n    }\n  };\n}) // withFilters( \'editor.PostTaxonomyType\' )\n)(\n/*****************\r\n*\tCOMPONENT\r\n*****************/\nfunction (props) {\n  var taxonomy = props.slug,\n      taxonomyData = props.taxonomy,\n      terms = props.terms,\n      onUpdateTerms = props.onUpdateTerms;\n\n  var _useRbTerms = useRbTerms(taxonomy, terms, {\n    termsQueryArgs: {\n      include: terms,\n      only_include: true,\n      taxonomy: taxonomy,\n      hide_empty: false\n    } // fetchArgs: {\n    // \tupdateOnArgsChange: false,\n    // },\n\n  }),\n      termsData = _useRbTerms.termsData,\n      setTermsData = _useRbTerms.setTermsData;\n\n  var onTermsChange = function onTermsChange(selectedTerms) {\n    var postTerms = selectedTerms;\n    var termsIds = postTerms ? postTerms.map(function (term) {\n      return term.term_id ? term.term_id : term.id;\n    }) : [];\n    setTermsData(postTerms);\n    return onUpdateTerms(termsIds, taxonomyData.rest_base);\n  };\n\n  return /*#__PURE__*/external_React_default().createElement((external_React_default()).Fragment, null, /*#__PURE__*/external_React_default().createElement(RBTagsManager_RBTagsManager, etiquetador_extends({}, props, {\n    onUpdateTerms: onTermsChange,\n    terms: termsData,\n    taxonomy: taxonomyData,\n    slug: taxonomy\n  })), /*#__PURE__*/external_React_default().createElement(TAEtiquetador_TAEtiquetador, {\n    terms: termsData,\n    slug: taxonomy,\n    taxonomy: taxonomyData,\n    onUpdateTerms: onTermsChange\n  }));\n});\n;// CONCATENATED MODULE: external "ReactDOM"\nconst external_ReactDOM_namespaceObject = ReactDOM;\n;// CONCATENATED MODULE: ../../../../gutenberg/src/blocks/ta-index/block.js\n\n\n\nMutationObserver = window.MutationObserver || window.WebKitMutationObserver;\nvar hooks = [];\n/**\r\n*   Returns node hook info if matches any hook selector\r\n*/\n\nfunction getNodeComponentHook(node) {\n  return node && node.matches ? hooks.filter(function (hook) {\n    return node.matches(hook.selector);\n  })[0] : null;\n}\n/**\r\n*   Render the component inside a container that goes into node, to not lose\r\n*   the node reference in DOM\r\n*/\n\n\nfunction renderInside(_ref) {\n  var component = _ref.component,\n      node = _ref.node;\n  var containerNode = document.createElement(\'div\');\n  node.innerHTML = \'\';\n  node.appendChild(containerNode);\n  node.componentContainer = containerNode;\n  (0,external_ReactDOM_namespaceObject.render)(component, containerNode);\n}\n/**\r\n*   Listens to addition or removal of nodes that matches the querySelector and\r\n*   mount/unmount the desired component in them as needed.\r\n*/\n\n\nfunction hookComponentToNode(props) {\n  var component = props.component,\n      querySelector = props.querySelector;\n  hooks.push(props); // Current Elements\n\n  document.querySelectorAll(querySelector).forEach(function (node, i) {\n    renderInside({\n      component: component,\n      node: node\n    });\n  });\n}\n/**\r\n*   Observe elements and add/remove components as needed\r\n*/\n\n\nvar obs = new MutationObserver(function (mutations, observer) {\n  if (!hooks || !hooks.length) return; // look through all mutations that just occured\n\n  for (var i = 0; i < mutations.length; ++i) {\n    // look through all added nodes of this mutation\n    for (var j = 0; j < mutations[i].addedNodes.length; ++j) {\n      var mutationNode = mutations[i].addedNodes[j];\n      var hook = getNodeComponentHook(mutationNode);\n      console.log(hook);\n\n      if (hook) {\n        console.log("New Element");\n        renderInside({\n          component: hook.component,\n          node: mutationNode\n        });\n      }\n    } // look through all removed nodes of this mutation\n\n\n    for (var _j = 0; _j < mutations[i].removedNodes.length; ++_j) {\n      var _mutationNode = mutations[i].removedNodes[_j];\n\n      var _hook = getNodeComponentHook(_mutationNode);\n\n      var componentContainer = _mutationNode.componentContainer;\n\n      if (componentContainer) {\n        console.log(\'Element removed\', (0,external_ReactDOM_namespaceObject.unmountComponentAtNode)(componentContainer));\n      }\n    }\n  }\n});\nobs.observe(document.body, {\n  childList: true,\n  subtree: true\n});\n/************\r\n*   TEST\r\n************/\n// hookComponentToNode({\n//     component: <div className="ta_article_images_column">Test</div>,\n//     querySelector: `.ta_article_images_column`,\n// });\n\n//# sourceURL=webpack://gen-gutenberg/../../../../gutenberg/src/blocks/ta-index/block.js_+_12_modules?')},366:()=>{eval("// Keep track of our locks\nvar locks = [];\n\nfunction lock(lockIt, handle, message) {\n  if (lockIt) {\n    if (!locks[handle]) {\n      locks[handle] = true;\n      wp.data.dispatch('core/editor').lockPostSaving(handle);\n      wp.data.dispatch('core/notices').createNotice('error', message, {\n        id: handle,\n        isDismissible: false\n      });\n    }\n  } else if (locks[handle]) {\n    locks[handle] = false;\n    wp.data.dispatch('core/editor').unlockPostSaving(handle);\n    wp.data.dispatch('core/notices').removeNotice(handle);\n  }\n}\n/********************************************************************\r\n *   Determine required taxonomies\r\n *********************************************************************/\n\n\nvar requiredTaxonomies = null;\nvar taxonomies = null;\nvar requiredTaxonomiesUnsubscribe = wp.data.subscribe(function () {\n  var currentPost = wp.data.select('core/editor').getCurrentPost();\n  if (!currentPost || !currentPost.rb_config || !currentPost.rb_config.required_taxonomies) return;\n  requiredTaxonomies = currentPost.rb_config.required_taxonomies;\n  requiredTaxonomiesUnsubscribe();\n});\n/********************************************************************\r\n *   Lock/Unlock based on required taxonomies\r\n *********************************************************************/\n\nwp.data.subscribe(function () {\n  if (!requiredTaxonomies) return;\n\n  for (var taxonomySlug in requiredTaxonomies) {\n    if (!requiredTaxonomies.hasOwnProperty(taxonomySlug)) continue; // get custom taxonomy\n\n    var taxonomyTerms = wp.data.select('core/editor').getEditedPostAttribute(taxonomySlug);\n    var taxonomy = wp.data.select('core').getTaxonomy(taxonomySlug);\n    if (!taxonomy) continue;\n    var condition = requiredTaxonomies[taxonomySlug]; // Lock post if there are no custom taxonomy terms selected\n\n    lock(condition && taxonomyTerms && !taxonomyTerms.length, \"\".concat(taxonomySlug, \"-lock\"), taxonomy.rb_config.labels.required_term_missing);\n  }\n});\n\n//# sourceURL=webpack://gen-gutenberg/../../../../gutenberg/src/blocks/ta-index/required-taxonomies.js?")},311:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".ta-etiquetador{border:solid;border:solid 4px #007cba}.ta-etiquetador .tags-container{margin:0 -0.25rem -0.25rem -0.25rem}.ta-etiquetador .tags-container .tag-btn{margin:0 .25rem .25rem .25rem}button{user-select:none}.ta-etiquetador .header .title{background:#007cba;color:#fff;padding:.2rem 1rem;font-size:1rem;margin-bottom:1rem;text-align:center}.ta-etiquetador .generator-btn{width:100%;text-align:center;justify-content:center;border-radius:0}.ta-etiquetador .tags-container{margin-bottom:2rem;padding:0rem .2rem}.ta-etiquetador .loading-spinner{text-align:center}", ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://gen-gutenberg/../../../../gutenberg/src/components/TAEtiquetador/style.css?../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js')},70:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === "string") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, ""]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://gen-gutenberg/../../../../../node_modules/css-loader/dist/runtime/api.js?')},191:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://gen-gutenberg/../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?")}},__webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e])return __webpack_module_cache__[e].exports;var t=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__=__webpack_require__(192)})();